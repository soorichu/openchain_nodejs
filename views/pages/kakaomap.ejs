<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>

  <style>
	#mapwrap{position:relative;overflow:hidden;}
	.category, .category *{margin:0;padding:0;color:#000;}   
	.category {position:absolute;overflow:hidden;top:10px;left:10px;width:150px;height:50px;z-index:10;border:1px solid black;font-family:'Malgun Gothic','맑은 고딕',sans-serif;font-size:12px;text-align:center;background-color:#fff;}
	.category .menu_selected {background:#FF5F4A;color:#fff;border-left:1px solid #915B2F;border-right:1px solid #915B2F;margin:0 -1px;} 
	.category li{list-style:none;float:left;width:50px;height:45px;padding-top:5px;cursor:pointer;} 
	.category .ico_comm {display:block;margin:0 auto 2px;width:22px;height:26px;background:url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/category.png') no-repeat;} 
	.category .ico_coffee {background-position:-10px 0;}  
	.category .ico_store {background-position:-10px -36px;}   
	.category .ico_carpark {background-position:-10px -72px;} 

	.wrap {position: absolute;left: 0;bottom: 40px;width: 288px;height: 132px;margin-left: -144px;text-align: left;overflow: hidden;font-size: 12px;font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;line-height: 1.5;}
    .wrap * {padding: 0;margin: 0;}
    .wrap .info {width: 286px;height: 120px;border-radius: 5px;border-bottom: 2px solid #ccc;border-right: 1px solid #ccc;overflow: hidden;background: #fff;}
    .wrap .info:nth-child(1) {border: 0;box-shadow: 0px 1px 2px #888;}
    .info .title {padding: 5px 0 0 10px;height: 30px;background: #eee;border-bottom: 1px solid #ddd;font-size: 18px;font-weight: bold;}
    .info .close {position: absolute;top: 10px;right: 10px;color: #888;width: 17px;height: 17px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/overlay_close.png');}
    .info .close:hover {cursor: pointer;}
    .info .body {position: relative;overflow: hidden;}
    .info .desc {position: relative;margin: 13px 0 0 90px;height: 75px;}
    .desc .ellipsis {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}
    .desc .jibun {font-size: 11px;color: #888;margin-top: -2px;}
    .info .img {position: absolute;top: 6px;left: 5px;width: 73px;height: 71px;border: 1px solid #ddd;color: #888;overflow: hidden;}
    .info:after {content: '';position: absolute;margin-left: -12px;left: 50%;bottom: 0;width: 22px;height: 12px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}
    .info .link {color: #5085BB;}
  </style>

</head>

<body>

<% include ../partials/nav.ejs %>

<div id="mapwrap"> 
    <!-- 지도가 표시될 div -->
    <div id="map" style="width:100%;height:450px;"></div>
    <!-- 지도 위에 표시될 마커 카테고리 -->
    <div class="category">
        <ul>
            <li id="coffeeMenu" onclick="changeMarker('coffee')">
                <span class="ico_comm ico_coffee"></span>
                커피숍
            </li>
            <li id="storeMenu" onclick="changeMarker('store')">
                <span class="ico_comm ico_store"></span>
                편의점
            </li>
            <li id="carparkMenu" onclick="changeMarker('carpark')">
                <span class="ico_comm ico_carpark"></span>
                주차장
            </li>
        </ul>
    </div>
</div>
<button onclick="geoLocation()">홈</button>
<button onclick="zoomIn()">+</button>
<button onclick="zoomOut()">-</button>
<button onclick="getInfo()">정보</button>
<button onclick="gotoMarkers()">마커 표시</button>
<button onclick="hideMarkers()">마커 감추기</button>
<button onclick="showMarkers()">마커 보이기</button>


<p id="message"></p>

  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=a75d32760d32a92755d0ea6821498916"></script>
  <script>
    var container = document.getElementById('map');
    var options = {
      center: new kakao.maps.LatLng(37.514280, 126.641727),
      level: 3
    };

    var map = new kakao.maps.Map(container, options);
    var mapTypeControl = new kakao.maps.MapTypeControl();
    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);

    geoLocation();

    var marker = new kakao.maps.Marker({
    	map:map,
    	potision: new kakao.maps.LatLng(37.514280, 126.641727)
    });

    var content = '<div class="wrap">' + 
            '    <div class="info">' + 
            '        <div class="title">' + 
            '            현재위치' + 
            '            <div class="close" onclick="closeOverlay()" title="닫기"></div>' + 
            '        </div>' + 
            '        <div class="body">' + 
            '            <div class="img">' +
            '                <img src="https://i.pinimg.com/originals/a2/e6/c6/a2e6c650d425ff02127d484815ca5faa.png" width="73" height="70">' +
            '           </div>' + 
            '            <div class="desc">' + 
            '                <div class="ellipsis">내가 있는 곳</div>' + 
            '                <div class="jibun ellipsis">주소는 비밀입니다</div>' + 
            '                <div><a href="https://github.com/soorichu" target="_blank" class="link">깃헙페이지</a></div>' + 
            '            </div>' + 
            '        </div>' + 
            '    </div>' +    
            '</div>';

    var overlay = new kakao.maps.CustomOverlay({
    	content: content,
    	map: map,
    	position: new kakao.maps.LatLng(37.514280, 126.641727)
    });

    kakao.maps.event.addListener(marker, 'click', function(){
    	overlay.setMap(map);
    });

    function closeOverlay(){
    	overlay.setMap(map);
    }

    function panTo(){
    	var moveLatLon = new kakao.maps.LatLng(33.450701, 126.570667);
    	map.panTo(moveLatLon);
    }

    function zoomIn(){
    	var level = map.getLevel();
    	map.setLevel(level-1);
    }

    function zoomOut(){
    	var level = map.getLevel();
    	map.setLevel(level+1);
    }

    function getInfo(){
    	var center = map.getCenter();
    	var level = map.getLevel();
    	var mapTypeId = map.getMapTypeId();
    	var bounds = map.getBounds();
    	var swLatLng = bounds.getSouthWest();
    	var neLatLng = bounds.getNorthEast();
    	var boundStr = bounds = toString();

    	var message = "지도 중심좌표 : 위도 " + center.getLat() +", 경도 " + center.getLng()
    				+ "<br>지도 레벨 : " + level 
    				+ "<br>지도 타입 : " + mapTypeId
    				+ "<br>남서쪽 좌표 : " + swLatLng.getLat() + ", " + swLatLng.getLng()
    				+ "<br>북서쪽 좌표 : " + neLatLng.getLat() + ", " + neLatLng.getLng();

    	document.getElementById("message").innerHTML = message;
    }

	function geoLocation(){
		if (navigator.geolocation) {
	    
	    navigator.geolocation.getCurrentPosition(function(position) {
	        
	        var lat = position.coords.latitude, // 위도
	            lon = position.coords.longitude; // 경도
	        
	        var locPosition = new kakao.maps.LatLng(lat, lon), 
	            message = '<div style="padding:2px;">현재 위치 입니다.</div>'; 
	        
	        displayMarker(locPosition, message);
	            
	      });
	    
		} else { 
		    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    
		        message = '현재 위치 사용 불가'
		        
		    displayMarker(locPosition, message);
		}

	}


	function displayMarker(locPosition, message) {

	    var marker = new kakao.maps.Marker({  
	        map: map, 
	        position: locPosition
	    }); 
	    
	    var iwContent = message, iwRemoveable = true;

	    var infowindow = new kakao.maps.InfoWindow({
	        content : iwContent,
	        removable : iwRemoveable
	    });
	    
	    infowindow.open(map, marker);
	    
	    map.setCenter(locPosition);      
	}    

	function gotoMarkers(){
		panTo();
		var positions = [
		    {
		        title: '카카오', 
		        latlng: new kakao.maps.LatLng(33.450705, 126.570677)
		    },
		    {
		        title: '생태연못', 
		        latlng: new kakao.maps.LatLng(33.450936, 126.569477)
		    },
		    {
		        title: '텃밭', 
		        latlng: new kakao.maps.LatLng(33.450879, 126.569940)
		    },
		    {
		        title: '근린공원',
		        latlng: new kakao.maps.LatLng(33.451393, 126.570738)
		    }
		];

		var imageSrc = "https://i.pinimg.com/originals/9f/d7/a8/9fd7a85b7122ad787edcee4ac9c844c0.gif";

		for(var i=0; i<positions.length; i++){
			var imageSize = new kakao.maps.Size(35, 35);
			var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);
			var marker = new kakao.maps.Marker({
				map: map,
				position: positions[i].latlng,
				title: positions[i].title,
				image: markerImage
			});
		}
	}

	var markers = [];

	kakao.maps.event.addListener(map, 'click', function(mouseEvent){
		addMarker(mouseEvent.latLng);
	});

	function hideMarkers(){
		setMarkers(null);
	}

	function showMarkers(){
		setMarkers(map);
	}

	function setMarkers(map){
		for(var i=0; i<markers.length; i++){
			markers[i].setMap(map);
		}
	}

	function addMarker(position){
		var marker = new kakao.maps.Marker({
			position: position
		});

		marker.setMap(map);
		markers.push(marker);
	}


	// 커피숍 마커가 표시될 좌표 배열입니다
	var coffeePositions = [ 
	    new kakao.maps.LatLng(37.499590490909185, 127.0263723554437),
	    new kakao.maps.LatLng(37.499427948430814, 127.02794423197847),
	    new kakao.maps.LatLng(37.498553760499505, 127.02882598822454),
	    new kakao.maps.LatLng(37.497625593121384, 127.02935713582038),
	    new kakao.maps.LatLng(37.49646391248451, 127.02675574250912),
	    new kakao.maps.LatLng(37.49629291770947, 127.02587362608637),
	    new kakao.maps.LatLng(37.49754540521486, 127.02546694890695)                
	];

	// 편의점 마커가 표시될 좌표 배열입니다
	var storePositions = [
	    new kakao.maps.LatLng(37.497535461505684, 127.02948149502778),
	    new kakao.maps.LatLng(37.49671536281186, 127.03020491448352),
	    new kakao.maps.LatLng(37.496201943633714, 127.02959405469642),
	    new kakao.maps.LatLng(37.49640072567703, 127.02726459882308),
	    new kakao.maps.LatLng(37.49640098874988, 127.02609983175294),
	    new kakao.maps.LatLng(37.49932849491523, 127.02935780247945),
	    new kakao.maps.LatLng(37.49996818951873, 127.02943721562295)
	];

	// 주차장 마커가 표시될 좌표 배열입니다
	var carparkPositions = [
	    new kakao.maps.LatLng(37.49966168796031, 127.03007039430118),
	    new kakao.maps.LatLng(37.499463762912974, 127.0288828824399),
	    new kakao.maps.LatLng(37.49896834100913, 127.02833986892401),
	    new kakao.maps.LatLng(37.49893267508434, 127.02673400572665),
	    new kakao.maps.LatLng(37.49872543597439, 127.02676785815386),
	    new kakao.maps.LatLng(37.49813096097184, 127.02591949495914),
	    new kakao.maps.LatLng(37.497680616783086, 127.02518427952202)                       
	];    

	var markerImageSrc = "http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/category.png";
	var coffeeMarkers = [], storeMarkers = [], carparkMarkers = [];

	createCoffeeMarkers();
	createStoreMarkers();
	createCarparkMarkers();

	changeMarker('coffee');

	function createMarker(position, image){
		var marker = new kakao.maps.Marker({
			position:position,
			image: image
		});

		return marker;
	}

	function createMarkerImage(src, size, options){
		var markerImage = new kakao.maps.MarkerImage(src, size, options);
		return markerImage;
	}

	function createCoffeeMarkers() {
	    
	    for (var i = 0; i < coffeePositions.length; i++) {  
	        
	        var imageSize = new kakao.maps.Size(22, 26),
	            imageOptions = {  
	                spriteOrigin: new kakao.maps.Point(10, 0),    
	                spriteSize: new kakao.maps.Size(36, 98)  
	            };     
	        
	        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
	            marker = createMarker(coffeePositions[i], markerImage);  
	        
	        coffeeMarkers.push(marker);
	    }     
	}


	function setCoffeeMarkers(map){
		for(var i=0; i < coffeeMarkers.length; i++){
			coffeeMarkers[i].setMap(map);
		}
	}

	function createStoreMarkers() {
	    for (var i = 0; i < storePositions.length; i++) {
	        
	        var imageSize = new kakao.maps.Size(22, 26),
	            imageOptions = {   
	                spriteOrigin: new kakao.maps.Point(10, 36),    
	                spriteSize: new kakao.maps.Size(36, 98)  
	            };       
	     
	        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
	            marker = createMarker(storePositions[i], markerImage);  

	        storeMarkers.push(marker);    
	    }        
	}

	function setStoreMarkers(map) {        
	    for (var i = 0; i < storeMarkers.length; i++) {  
	        storeMarkers[i].setMap(map);
	    }        
	}

	function createCarparkMarkers() {
	    for (var i = 0; i < carparkPositions.length; i++) {
	        
	        var imageSize = new kakao.maps.Size(22, 26),
	            imageOptions = {   
	                spriteOrigin: new kakao.maps.Point(10, 72),    
	                spriteSize: new kakao.maps.Size(36, 98)  
	            };       
	     
	        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
	            marker = createMarker(carparkPositions[i], markerImage);  

	        carparkMarkers.push(marker);        
	    }                
	}

	function setCarparkMarkers(map) {        
	    for (var i = 0; i < carparkMarkers.length; i++) {  
	        carparkMarkers[i].setMap(map);
	    }        
	}

	function changeMarker(type){
		var coffeeMenu = document.getElementById('coffeeMenu');
		var storeMenu = document.getElementById('storeMenu');
		var carparkMenu = document.getElementById('carparkMenu');

		if(type === 'coffee'){
			coffeeMenu.className = 'menu_selected';
			storeMenu.className = '';
			carparkMenu.className = '';

			setCoffeeMarkers(map);
			setStoreMarkers(null);
			setCarparkMarkers(null);
		}else if(type === 'store'){
			coffeeMenu.className = '';
			storeMenu.className = 'menu_selected';
			carparkMenu.className = '';

			setCoffeeMarkers(null);
			setSotreMarkers(map);
			setCarparkMarkers(null);
		}else if(type === 'carpark'){
			coffeeMenu.className = '';
			storeMenu.className = '';
			carparkMenu.className = 'menu_selected';

			setCoffeeMarkers(null);
			setStoreMarkers(null);
			setCarparkMarkers(map);
		}
	}


  </script>
</body>
</html>
